import 'package:carkee/components/network_api.dart';
import 'package:carkee/config/singleton.dart';
import 'package:carkee/controllers/controllers.dart';
import 'package:carkee/models/ModelBottomAdsResult.dart';
import 'package:carkee/models/ModelNewsResult.dart';
import 'package:carkee/networks_app/url_app.dart';
import 'package:flutter_easyloading/flutter_easyloading.dart';
/// Generated by Flutter GetX Starter on 2021-08-01 19:57
import 'package:get/get.dart';

class DashboardScreenLogic extends GetxController {
  //
  // final ProfileController profileController = Get.find();
  var isLoading = false;
  var currentPage = 1;
  var isLastPage = false;
  var searchTextString = '';
  var listData = <ModelNews>[].obs;
  var pageCount = 0;
  var errorString = "".obs;
  var modelBottomAdsResult = ModelBottomAdsResult().obs;
  var isDoneLoadAPI = false.obs;
  @override
  void onInit() {
    // TODO: implement onInit
    super.onInit();
  }
  @override
  void onReady() {
    // TODO: implement onReady
    super.onReady();
    currentPage = 1;
    pageCount = 0;
    callAPIGetList();
    callAPIGetBottomAds();
  }
  @override
  void onClose() {
    // TODO: implement onClose
    super.onClose();
  }
  Future callAPIGetList() async {
    print("start callAPIGetList");
    isLoading = true; //lock API
    EasyLoading.show();
    var endpoint = url_news_list;
    Map<String, dynamic> jsonQuery = {
      "account_id": Session.shared.HASH_ID,
      "keyword": searchTextString,
      "page": currentPage
    };
    if (Session.shared.isLogedin()) {
      jsonQuery = {
        "account_id": Session.shared.HASH_ID,
        "keyword": searchTextString,
        "access-token": await Session.shared.getToken(),
        "page": currentPage
      };
    }


    print("jsonQuery $jsonQuery");
    var network = NetworkAPI(endpoint: endpoint, jsonQuery: jsonQuery);
    var jsonBody = await network.callAPIGET(showLog: true, keepKeyboard: false);

    EasyLoading.dismiss();
    if (jsonBody["code"] == 100) {
      print(" => CALL API $endpoint OK ✅");
      var models = ModelNewsResult.fromJson(jsonBody);
      if (models.getPageCurrentInt() == 1) {
        listData.value = models.data;
      } else {
        listData.addAll(models.data);
      }

      print(" => currentPage $currentPage  ✅");
      currentPage = models.getPageCurrentInt(); //make sure data from server
      pageCount = models.getPageCountInt(); //make sure data from server
      isLastPage = (currentPage >= pageCount);
      currentPage = models.getNextPageInt();
      print(" => nextpage $currentPage  ✅");
      print(" => pageCount $pageCount  ✅");
      print(" => isLastPage $isLastPage  ✅");
      errorString.value = "";
      isDoneLoadAPI.value = true;
    } else {
      print(
          " => CALL API $endpoint FALSE: $jsonBody with jsonQuery $jsonQuery");
      errorString.value = jsonBody["message"];
    }
    isLoading = false; //unlock allow next API
  }

  callAPIGetBottomAds() async {
    ///phase 3 will enable this!
    print("start url_ads_list_random");
    var endpoint = url_ads_list_random;
    Map<String, dynamic> jsonQuery = {};
    if (Session.shared.isLogedin()) {
      jsonQuery = {
        "access-token": await Session.shared.getToken(),
      };
    }

    var network = NetworkAPI(endpoint: endpoint, jsonQuery: jsonQuery);
    var jsonBody = await network.callAPIGET(showLog: false, keepKeyboard: false);
    if (jsonBody["code"] == 100) {
      print(" => CALL API $endpoint OK");
      this.modelBottomAdsResult.value = ModelBottomAdsResult.fromJson(jsonBody);
    } else {
      print(
          " => CALL API $endpoint FALSE: $jsonBody with jsonQuery $jsonQuery");
      if (jsonBody["code"] ?? 102 != 102){
        Session.shared.showAlertPopupOneButtonWithCallback(
            content: jsonBody["message"] ?? "");
      } else {
        print("code 102 ads");
      }

    }
  }

  loadMore() {
    if (isLoading == false) {
      if (isLastPage) {
        print("none load more ");
      } else {
        print("isLastPage::::::::::::::::::::::$isLastPage");
        callAPIGetList();
      }
    } else {
      print("data loading! not allow call!");
    }
  }
  Future refresh() async {
    print("refresh::::::::::::::::::::::");
    listData.clear();
    searchTextString = '';
    currentPage = 1;
    errorString.value = "";
    isLoading = false;
    isDoneLoadAPI.value = false;
    callAPIGetList();
  }

}