/// Generated by Flutter GetX Starter on 2021-09-15 13:16
import 'dart:io';

import 'package:carkee/components/TextFieldPhungNoBorder.dart';
import 'package:carkee/components/item_upload.dart';
import 'package:carkee/config/singleton.dart';
import 'package:carkee/config/styles.dart';
import 'package:carkee/models/V2/ModelSecurityQuestionResult.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';

import '../join_club_v2_logic.dart';
import 'item_question_dynamic_logic.dart';

class ItemQuestionDynamicPage extends StatefulWidget {
  final ModelQuestion model;
  final int index;
  final Function(String) callbackString;
  final Function(File) callbackFile;
  const ItemQuestionDynamicPage(
      {Key key, this.model, this.index, this.callbackString, this.callbackFile})
      : super(key: key);
  @override
  _ItemQuestionDynamicPageState createState() =>
      _ItemQuestionDynamicPageState();
}

class _ItemQuestionDynamicPageState extends State<ItemQuestionDynamicPage> {
  final ItemQuestionDynamicLogic logic = Get.put(ItemQuestionDynamicLogic());
  final JoinClubV2Logic joinClubV2Logic =
      Get.find(); //update answer for question
  TextEditingController controller = TextEditingController();

  File file;
  @override
  void dispose() {
    Get.delete<ItemQuestionDynamicLogic>();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      mainAxisAlignment: MainAxisAlignment.start,
      children: [
        Padding(
          padding: const EdgeInsets.only(top: 10),
          child: Wrap(children: [
            widget.model.isFileUpload == 0
                ? Text(
                    'Question : ',
                    style: Styles.mclub_UPCASETilte,
                  )
                : SizedBox(),
            Text(
              widget.model
                  .question, // ko nên set cứng, ở đây nó có thể trả về rất nhiều câu hỏi, tạm thời fix cứng trước!
              style: Styles.mclub_UPCASETilte,
            ),
          ]),
        ),
        widget.model.isFileUpload == 0
            ? TextFieldPhungNoBorder(
                controller: controller,
                labelText: "Answer",
                hintText: "",
                updateChange: () {
                  print("controller.text ${controller.text}");
                  widget
                      .callbackString(controller.text); // đá callback ra ngoài
                },
                notAllowEmpty: true,
              )
            : uploadItem(widget.model),
      ],
    );
  }

  uploadItem(ModelQuestion model) {
    return XibItemUploadLater(
        line1: model.question,
        file: file,
        fileType: "",
        onTap: () {
          print('show Popup choose source upload');
          Session.shared.showImagePicker(context, isHavePDFOption: false,
              callback: (file) {
            widget.callbackFile(file);
            setState(() {
              this.file = file;
            });
          });
          // Session.shared.sho
        });
  }
}
