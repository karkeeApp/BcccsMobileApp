/// Generated by Flutter GetX Starter on 2021-09-08 23:45
import 'dart:io';
import 'dart:ui';

import 'package:carkee/components/TextFieldPhungNoBorder.dart';
import 'package:carkee/components/appbar_custom.dart';
import 'package:carkee/components/item_upload.dart';
import 'package:carkee/config/app_configs.dart';
import 'package:carkee/config/strings.dart';
import 'package:carkee/controllers/controllers.dart';
import 'package:carkee/models/V2/ModelSecurityQuestionResult.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:image_picker/image_picker.dart';
import 'package:path/path.dart' as p;
import 'join_club_v2_logic.dart';

class JoinClubV2Page extends StatefulWidget {
  @override
  _JoinClubV2PageState createState() => _JoinClubV2PageState();
}

class _JoinClubV2PageState extends State<JoinClubV2Page> {
  final JoinClubV2Logic logic = Get.put(JoinClubV2Logic());
  final ProfileController profileController = Get.find();

  @override
  void dispose() {
    Get.delete<JoinClubV2Logic>();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    print('Start build');
    return image_background(context);
  }

  Widget image_background(BuildContext context) {
    //return Center(child: CircularProgressIndicator());
    return Material(
      child: Container(
          // color: Colors.red,
          decoration: BoxDecoration(
            image: DecorationImage(
                image: AssetImage("assets/images/bg_2.png"), fit: BoxFit.cover),
          ),
          child: blur_background(context)),
    );
  }

  Widget blur_background(BuildContext context) {
    //return Center(child: CircularProgressIndicator());
    return BackdropFilter(
      filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
      child: Container(
        decoration: BoxDecoration(
          color: Colors.white.withOpacity(0.8),
        ),
        child: body_view(context),
      ),
    );
  }

  Widget body_view(BuildContext context) {
    print('Start build');
    return Scaffold(
      backgroundColor: Colors.transparent,
      body: SafeArea(
        child: Container(
          child: Column(children: [
            // LineStepRegister(totalStep: 4, currentStep: 1),
            AppNavigationV2(
              closeClicked: () {
                print("close clicked");
                Get.back(); //if onboard then
              },
              title: "Membership Application",
              subTitle: 'Submit the information we need to set your app up!',
              totalStep: 0,
              //hide it
              currentStep: 3,
            ),
            Expanded(
              child: ListView(
                children: [section1(context)],
              ),
            ),
          ]),
        ),
      ),
    );
  }

  //load question dynamic from server
  Widget section1(BuildContext context) {
    return Padding(
        padding:
            const EdgeInsets.symmetric(horizontal: Config.kDefaultPadding * 2),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Column(
              children: [
                TextFieldPhungNoBorder(
                  controller: logic.club_code,
                  labelText: "Club Code",
                  hintText: "",
                  onChange: (value) {
                    print(value);
                    logic.club_code.text = value;
                  },
                  notAllowEmpty: true,
                ),
              ],
            ),
            // Obx(()=> logic.isLoadDoneData.value ? getListQuestion() : SizedBox()),
            Obx(
              () => Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: logic.listWidgetQuestion()),
            ),
            BottomLineMclub(),
            Obx(
              () => !logic.isLoadDoneData.value
                  ? Padding(
                      padding: const EdgeInsets.symmetric(
                          vertical: Config.kDefaultPadding),
                      child: BlackButton(
                        callbackOnPress: () {
                          FocusScope.of(context).unfocus();
                          logic.callAPIGetListQuesiton();
                          print('Get questions');
                        },
                        title: "Get questions",
                      ),
                    )
                  : SizedBox(),
            ),
            Obx(
              () => logic.isLoadDoneData.value
                  ? Padding(
                      padding: const EdgeInsets.symmetric(
                          vertical: Config.kDefaultPadding),
                      child: BlackButton(
                        callbackOnPress: () {
                          FocusScope.of(context).unfocus();
                          logic.callAPIJoin_Club();
                        },
                        title: "Submit",
                      ),
                    )
                  : SizedBox(),
            ),
          ],
        ));
  }
}
